Source: libdevel-cover-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Damyan Ivanov <dmn@debian.org>,
           gregor herrmann <gregoa@debian.org>,
           Florian Schlichting <fsfs@debian.org>,
           Axel Beckert <abe@debian.org>,
           Dominic Hargreaves <dom@earth.li>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper-compat (= 13),
               libb-debug-perl <!nocheck> | perl (<< 5.27.3) <!nocheck>,
               libdbm-deep-perl <!nocheck>,
               libhtml-parser-perl <!nocheck>,
               libmoo-perl <!nocheck>,
               libmoose-perl <!nocheck>,
               libpod-coverage-perl <!nocheck>,
               libppi-html-perl <!nocheck> | perltidy <!nocheck>,
               libreadonly-perl <!nocheck>,
               libtemplate-perl,
               libtest-differences-perl <!nocheck>,
               perl-xs-dev,
Standards-Version: 4.5.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libdevel-cover-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libdevel-cover-perl.git
Homepage: https://metacpan.org/release/Devel-Cover
Rules-Requires-Root: no

Package: libdevel-cover-perl
Architecture: any
Depends: libb-debug-perl | perl (<< 5.27.3),
         libhtml-parser-perl,
         ${misc:Depends},
         ${perl:Depends},
         ${sameperl:Depends},
         ${shlibs:Depends}
Recommends: gcc,
            libtemplate-perl
Suggests: libbrowser-open-perl,
          libcapture-tiny-perl,
          libclass-xsaccessor-perl,
          libjson-maybexs-perl,
          libmoo-perl,
          libnamespace-clean-perl,
          libpod-coverage-perl,
          libppi-html-perl | perltidy,
          libsereal-decoder-perl,
          libsereal-encoder-perl,
          libterm-size-perl,
          libtest-differences-perl
Description: Perl tool for determining code coverage metrics
 Devel::Cover is a Perl module that helps collect and display code coverage
 information. Code coverage information is collected using a pluggable runops
 function which counts how many times each op is executed. This data is then
 mapped back to reality using the B compiler modules. There is also a another
 statement profiler which needs a better backend to be really useful.
 .
 Statement, branch, condition, subroutine, pod and time coverage information is
 reported. Statement coverage data should be reasonable, although there may be
 some statements which are not reported. Branch and condition coverage data
 should be mostly accurate too, although not always what one might initially
 expect. Subroutine coverage should be as accurate as statement coverage. Pod
 coverage comes from Pod::Coverage. If Pod::Coverage::CountParents is available
 it will be used instead. Coverage data for path coverage are not yet
 collected.
 .
 The cover program can be used to generate coverage reports. Another included
 program, gcov2perl, can convert gcov files to Devel::Cover databases.
